#===============================================================================
# **
#-------------------------------------------------------------------------------
#
#===============================================================================
class Picture_Animator
  #--------------------------------------------------------------------------
  # *
  # @param [Hash<Sprite>] pictures
  #--------------------------------------------------------------------------
  def initialize(pictures)
    @active = false
    @running = false
    @pictures = pictures
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def update
    update_input
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def end

  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def dispose

  end
  #--------------------------------------------------------------------------
  # *
  # @return [Hash<Sprite>]
  #--------------------------------------------------------------------------
  def pictures; @pictures; end
  #--------------------------------------------------------------------------
  # *
  # @param [Symbol] symbol
  # @return [Sprite]
  #--------------------------------------------------------------------------
  def picture(symbol); @pictures[symbol]; end
  #--------------------------------------------------------------------------
  # *
  # @param [Method] handler
  #--------------------------------------------------------------------------
  def set_end_handler(handler)
    @end_handler = handler
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def update_input
    return unless active?
    call_final_stage if Input.trigger?(:C)
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def active?; @active; end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def running?; @running; end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def active=(active); @active = active; end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def play
    if active?
      if running?
        return
      else
        @running = true
      end
    else
      @active = true
      @running = true
      start_skeduler
    end
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def stop
    @active = false
    @running = false
    hide_all_sprites
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def start_skeduler

  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def hide_all_sprites

  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def call_final_stage
    @end = true
    final_stage
  end
  #--------------------------------------------------------------------------
  # *
  #--------------------------------------------------------------------------
  def final_stage

  end
end